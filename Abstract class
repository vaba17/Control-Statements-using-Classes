#include <iostream>
using namespace std;
// Base class
class Shape
{
  public:
  // pure virtual function providing interface framework.
  virtual double getArea() = 0;
  void setWidth(double w)
   {
      width = w;
   }
   void setHeight(double h)
    {
       height = h;
    }
    protected:
    double width;
    double height;
};
// Derived classes
class Rectangle: public Shape
{
  public:
  double getArea()
  {
    return (width * height);
  }
};
class Triangle: public Shape
{
  public:
  double getArea()
  {
    return (width * height)/2;
  }
};
int main(void)
{
  Rectangle Rect;
  Triangle Tri;
  Rect.setWidth(8);
  Rect.setHeight(5);
  // Print the area of the object.
  cout << "Total Rectangle area: " << Rect.getArea() << endl;
  Tri.setWidth(4);
  Tri.setHeight(12);
  // Print the area of the object.
  cout << "Total Triangle area: " << Tri.getArea() << endl;
  return 0;
}
